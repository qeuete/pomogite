import React, { useState, useContext, useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import axios from 'axios';
import { motion } from 'framer-motion'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º motion –∏–∑ Framer Motion
import './ProductDetails.css';
import { CartContext } from '../CartContext/CartContext';

const ProductDetails = () => {
  const { addToCart } = useContext(CartContext);
  const [product, setProduct] = useState(null);
  const [isFavorite, setIsFavorite] = useState(false);
  const location = useLocation();

  useEffect(() => {
    const productData = location.state && location.state.product;
    setProduct(productData);
    if (productData) {
      setIsFavorite(productData.isFavorite || false);
    }
  }, [location.state]);

  const handleAddToCart = () => {
    addToCart(product);
  };

  const toggleFavorite = () => {
    const updatedFavoriteStatus = !isFavorite;
    setIsFavorite(updatedFavoriteStatus);
    axios.put(`http://localhost:3001/media/${product.id}`, { ...product, isFavorite: updatedFavoriteStatus })
      .then(res => {
        // –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
      })
      .catch(err => console.log(err));
  };

  if (!product) {
    return <div>No product data available</div>;
  }

  const { name, description, url, price, color } = product;

  return (
    <div className="product-details-container">
      <form className="product-details-form">
        <motion.div 
          className="product-details-content"
          initial={{ opacity: 0 }} // –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
          animate={{ opacity: 1 }} // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
          transition={{ duration: 0.5 }} // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
        >
          <div className="product-details-info">
            <h1 className="product-details-title">{name}</h1>
            <div className="product-details-image-container">
              <img src={url} alt={`–§–æ—Ç–æ ${name}`} className="product-details-image" />
            </div>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {description}</p>
            <div className="price-buy-container">
              <div className="price-container">
                <p><strong>–¶–µ–Ω–∞:</strong> {price} —Ä—É–±.</p>
              </div>
              <motion.button 
                type="button" 
                className="buy-button"
                whileHover={{ scale: 1.1 }} // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –º—ã—à–∏
                whileTap={{ scale: 0.9 }} // –£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
                onClick={handleAddToCart}
              >
                –ö—É–ø–∏—Ç—å
              </motion.button>
              {color && color.map((c, index) => (
                <button key={index} className="color-button">{c}</button>
              ))}
            </div>
            <motion.button 
              type="button" 
              className="favorite-button-new" 
              onClick={toggleFavorite}
              whileHover={{ scale: 1.1 }} // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –º—ã—à–∏
              whileTap={{ scale: 0.9 }} // –£–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
            >
              {isFavorite ? '‚ù§Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ' : 'ü§ç –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
            </motion.button>
          </div>
        </motion.div>
      </form>
    </div>
  );
};

export default ProductDetails;
